{"version":3,"sources":["contexts/AuthContext.jsx","components/Signup.jsx","components/Login.jsx","components/Logout.jsx","components/Home.jsx","components/Dashboard.jsx","components/Navbar.jsx","components/Note.jsx","components/Error.jsx","App.js","index.js"],"names":["AuthContext","createContext","AuthContextProvider","props","useState","undefined","loggedIn","setLoggedIn","currentUser","setCurrentUser","getLoggedInState","a","axios","get","withCredentials","response","data","status","user","console","log","useEffect","contextValue","Provider","value","children","useStyles","makeStyles","field","marginTop","marginBottom","display","formCard","Signup","classes","firstName","setFirstName","lastName","setLastName","phone","setPhone","email","setEmail","password","setPassword","errorMessage","setErrorMessage","useContext","history","useHistory","className","to","style","border","width","height","textAlign","margin","alignItem","justifyContent","fontSize","borderRadius","Container","Typography","variant","color","gutterBottom","autoComplete","onSubmit","e","preventDefault","signupData","first_name","last_name","phone_number","tokenResponse","token","headers","post","push","pathname","message","signup","submitHandler","TextField","onChange","target","label","fullWidth","required","type","Button","btn","disabled","Login","loginData","login","Logout","logout","Home","toast","configure","Dashboard","title","setTitle","notes","setNotes","handleSubmit","noteId","note","_id","noteIdString","search","msg","getAllNotes","component","noValidate","map","index","padding","borderBottom","cursor","onClick","delete","error","position","POSITION","BOTTOM_RIGHT","autoClose","deleteNote","deleteHandler","Navbar","AppBar","Toolbar","flexGrow","Link","transform","Note","idCopy","queryParams","URLSearchParams","location","entries","param","content","setContent","getNote","patch","info","updateNote","multiline","rows","Error","state","App","defaults","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cc36227.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport React, { createContext, useEffect, useState } from 'react'\r\n\r\nconst AuthContext = createContext()\r\n\r\nconst AuthContextProvider = (props) => {\r\n\r\n    const [loggedIn, setLoggedIn] = useState(undefined)\r\n    const [currentUser, setCurrentUser] = useState(undefined)\r\n    //let csrfToken\r\n    // const [token, setToken] = useState(\"\")\r\n    async function getLoggedInState() {\r\n\r\n        try {\r\n            const response = await axios.get('/user/get_loggedin_user', { withCredentials: true })\r\n            if (response.data.status === \"success\") {\r\n                setLoggedIn(true)\r\n                setCurrentUser(response.data.user)\r\n            } else {\r\n                setLoggedIn(false)\r\n            }\r\n        } catch (err) {\r\n            setLoggedIn(false)\r\n            console.log(err.response)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLoggedInState()\r\n    }, [])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const csrf = () => {\r\n    //         fetch(\"/api/getcsrf\", {\r\n    //             credentials: \"same-origin\",\r\n    //         })\r\n    //             .then((res) => {\r\n    //                 // csrfToken = res.headers.get([\"X-CSRFToken\"]);\r\n    //                 // console.log(csrfToken);\r\n    //                 console.log(res.headers.get([\"X-CSRFToken\"]))\r\n    //                 setToken(res.headers.get([\"X-CSRFToken\"]))\r\n    //             })\r\n    //             .catch((err) => {\r\n    //                 console.log(err);\r\n    //             });\r\n    //     }\r\n\r\n    //     csrf()\r\n    // })\r\n\r\n    const contextValue = {\r\n        loggedIn,\r\n        currentUser,\r\n        getLoggedInState,\r\n        // token\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue} >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContext\r\n\r\nexport {\r\n    AuthContextProvider\r\n}","import React, { useContext, useState } from 'react'\r\nimport axios from 'axios'\r\nimport AuthContext from '../contexts/AuthContext'\r\nimport { Redirect } from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n    field: {\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n        display: \"block\"\r\n    },\r\n    formCard: {\r\n        marginTop: \"100px\"\r\n    }\r\n})\r\n\r\nconst Signup = () => {\r\n    const classes = useStyles()\r\n\r\n    const [firstName, setFirstName] = useState(\"\")\r\n    const [lastName, setLastName] = useState(\"\")\r\n    const [phone, setPhone] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n\r\n    const { loggedIn } = useContext(AuthContext)\r\n\r\n    const history = useHistory()\r\n\r\n    const submitHandler = () => {\r\n\r\n        const signupData = {\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n            phone_number: phone,\r\n            email,\r\n            password\r\n        }\r\n\r\n        async function signup() {\r\n\r\n            try {\r\n\r\n                const tokenResponse = await axios.get('/api/getcsrf', { withCredentials: true })\r\n                //console.log(response.headers[\"x-csrftoken\"]) \r\n                const token = tokenResponse.headers[\"x-csrftoken\"]\r\n\r\n                const response = await axios.post(\r\n                    \"/user/signup\",\r\n                    signupData,\r\n                    {\r\n                        headers: {\r\n                            'X-CSRFToken': token,\r\n                        }\r\n                    }\r\n                )\r\n\r\n                //console.log(response.data)\r\n\r\n                if(response.data.status === \"success\") {\r\n                    history.push({\r\n                        pathname: \"/login\"\r\n                    })\r\n                }\r\n\r\n            } catch (err) {\r\n                setErrorMessage(err.response.data.message)\r\n                console.log(err.response)\r\n            }\r\n\r\n        }\r\n\r\n\r\n        signup()\r\n    }\r\n\r\n    return (\r\n        <div className={classes.formCard} >\r\n\r\n            {\r\n                loggedIn\r\n                    ? <Redirect to=\"/dashboard\" />\r\n                    : null\r\n            }\r\n\r\n            {\r\n                errorMessage\r\n                    ? <div\r\n                        style={{\r\n                            border: \"1px solid red\",\r\n                            width: \"60%\",\r\n                            height: \"fit-content\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            marginBottom: \"20px\",\r\n                            display: 'flex',\r\n                            alignItem: \"center\",\r\n                            justifyContent: \"center\",\r\n                            fontSize: \"1.5rem\",\r\n                            borderRadius: \"10px\"\r\n                        }}\r\n\r\n                    > <p style={{ display: \"inline-block\" }} >{errorMessage}</p> </div>\r\n                    : null\r\n            }\r\n\r\n            <Container>\r\n                <Typography\r\n                    variant=\"h4\"\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                >\r\n                    SignUp\r\n                </Typography>\r\n\r\n                <form autoComplete=\"off\" onSubmit={(e) => {\r\n                    e.preventDefault()\r\n                    submitHandler()\r\n                }} >\r\n\r\n                    <TextField\r\n                        onChange={(e) => { setFirstName(e.target.value) }}\r\n                        className={classes.field}\r\n                        label=\"First Name\"\r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n\r\n                    <TextField\r\n                        onChange={(e) => { setLastName(e.target.value) }}\r\n                        className={classes.field}\r\n                        label=\"Last Name\"\r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n\r\n                    <TextField\r\n                        onChange={(e) => { setPhone(e.target.value) }}\r\n                        type=\"number\"\r\n                        className={classes.field}\r\n                        label=\"Phone\"\r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n\r\n                    <TextField\r\n                        onChange={(e) => { setEmail(e.target.value) }}\r\n                        type=\"email\"\r\n                        className={classes.field}\r\n                        label=\"Email\"\r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n\r\n                    <TextField\r\n                        onChange={(e) => { setPassword(e.target.value) }}\r\n                        type=\"password\"\r\n                        className={classes.field}\r\n                        label=\"Password\"\r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        className={classes.btn}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        disabled={\r\n                            !email ||\r\n                            !password\r\n                        }\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n\r\n                </form>\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React, { useContext, useState } from 'react'\r\nimport axios from 'axios'\r\nimport AuthContext from '../contexts/AuthContext'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    field: {\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n        display: \"block\"\r\n    },\r\n    formCard: {\r\n        marginTop: \"100px\"\r\n    }\r\n})\r\n\r\nconst Login = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n\r\n    const { loggedIn, getLoggedInState } = useContext(AuthContext)\r\n\r\n    const history = useHistory()\r\n\r\n    const submitHandler = () => {\r\n\r\n        const loginData = {\r\n            email,\r\n            password\r\n        }\r\n\r\n        async function login() {\r\n            try {\r\n                const response = await axios.get('/api/getcsrf', { withCredentials: true })\r\n                //console.log(response.headers[\"x-csrftoken\"]) \r\n                const token = response.headers[\"x-csrftoken\"]\r\n\r\n                await axios.post(\r\n                    \"/user/login\",\r\n                    loginData,\r\n                    {\r\n                        headers: {\r\n                            'X-CSRFToken': token,\r\n                        }\r\n                    }\r\n                )\r\n                getLoggedInState()\r\n\r\n                history.push(\"/dashboard\")\r\n\r\n            } catch (err) {\r\n                setErrorMessage(err.response.data.message)\r\n                //console.log(err.response)\r\n            }\r\n\r\n        }\r\n\r\n        login()\r\n    }\r\n\r\n    return (\r\n        <div className={classes.formCard} >\r\n\r\n            {\r\n                loggedIn\r\n                    ? <Redirect to=\"/dashboard\" />\r\n                    : null\r\n            }\r\n\r\n            {\r\n                errorMessage\r\n                    ? <div\r\n                        style={{\r\n                            border: \"1px solid red\",\r\n                            width: \"60%\",\r\n                            height: \"fit-content\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            marginBottom: \"20px\",\r\n                            display: 'flex',\r\n                            alignItem: \"center\",\r\n                            justifyContent: \"center\",\r\n                            fontSize: \"1.5rem\",\r\n                            borderRadius: \"10px\"\r\n                        }}\r\n\r\n                    > <p style={{ display: \"inline-block\" }} >{errorMessage}</p> </div>\r\n                    : null\r\n            }\r\n\r\n            <Container>\r\n                <Typography\r\n                    variant=\"h4\"\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                >\r\n                    Login\r\n                </Typography>\r\n\r\n                <form autoComplete=\"off\" onSubmit={(e) => {\r\n                    e.preventDefault()\r\n                    submitHandler()\r\n                }} >\r\n\r\n                    <TextField\r\n                        onChange={(e) => { setEmail(e.target.value) }}\r\n                        type=\"email\"\r\n                        className={classes.field}\r\n                        label=\"Email\"\r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n\r\n                    <TextField\r\n                        onChange={(e) => { setPassword(e.target.value) }}\r\n                        type=\"password\"\r\n                        className={classes.field}\r\n                        label=\"Password\"\r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        className={classes.btn}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        disabled={\r\n                            !email ||\r\n                            !password\r\n                        }\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n\r\n                </form>\r\n\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import axios from 'axios'\r\nimport { useContext, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport AuthContext from '../contexts/AuthContext'\r\n\r\nconst Logout = () => {\r\n\r\n    const { getLoggedInState, loggedIn } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        if (loggedIn) {\r\n            async function logout() {\r\n                const response = await axios.get('/user/logout')\r\n                console.log(response.data)\r\n                getLoggedInState()\r\n            }\r\n\r\n            logout()\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !loggedIn\r\n                    ? <Redirect to=\"/login\" />\r\n                    : null\r\n            }\r\n            <h1>Logout</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Logout","import { useContext } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport AuthContext from '../contexts/AuthContext'\r\n\r\nfunction Home() {\r\n\r\n  const { loggedIn } = useContext(AuthContext)\r\n\r\n  return (\r\n    <>\r\n\r\n      {\r\n        loggedIn ? <h1>Home</h1> : <Redirect to=\"/login\" />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Home","import React, { useContext, useEffect, useState } from \"react\"\r\nimport { Redirect, useHistory } from \"react-router-dom\"\r\nimport AuthContext from \"../contexts/AuthContext\"\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nconst useStyles = makeStyles({\r\n    field: {\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n        display: \"block\"\r\n    }\r\n})\r\n\r\ntoast.configure()\r\n\r\nfunction Dashboard() {\r\n\r\n    const classes = useStyles()\r\n\r\n    const { loggedIn } = useContext(AuthContext)\r\n    const [title, setTitle] = useState(\"\")\r\n    const [notes, setNotes] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            const tokenResponse = await axios.get('/api/getcsrf', { withCredentials: true })\r\n            //console.log(tokenResponse.headers[\"x-csrftoken\"])\r\n            const token = tokenResponse.headers[\"x-csrftoken\"]\r\n\r\n            const response = await axios.post(\r\n                '/api/notes',\r\n                { title },\r\n                {\r\n                    headers: {\r\n                        \"X-CSRFToken\": token\r\n                    }\r\n                }\r\n            )\r\n\r\n            const noteId = response.data.note._id[\"$oid\"]\r\n            const noteIdString = `id=${noteId}`\r\n\r\n            history.push({\r\n                pathname: \"/note\",\r\n                search: noteIdString\r\n            })\r\n        } catch (err) {\r\n            console.log(err.response)\r\n            console.log(err.response.data.msg)\r\n\r\n            if(err.response.data.msg === `Missing cookie \"access_token_cookie\"`) {\r\n                // history.push({\r\n                //     pathname: \"/error\",\r\n                //     state: {\r\n                //         message: \"User has logged out\"\r\n                //     }\r\n                // })\r\n                setErrorMessage(\"User has logged out\")\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    async function getAllNotes() {\r\n        const response = await axios.get(\r\n            \"/api/notes\"\r\n        )\r\n\r\n        setNotes(response.data.notes)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllNotes()\r\n    }, [])\r\n\r\n\r\n    const deleteHandler = (noteId) => {\r\n        async function deleteNote() {\r\n            try {\r\n                const tokenResponse = await axios.get('/api/getcsrf', { withCredentials: true })\r\n                //console.log(tokenResponse.headers[\"x-csrftoken\"])\r\n                const token = tokenResponse.headers[\"x-csrftoken\"]\r\n\r\n                const response = await axios.delete(\r\n                    `/api/notes/${noteId}`,\r\n                    {\r\n                        headers: {\r\n                            \"X-CSRFToken\": token\r\n                        }\r\n                    }\r\n                )\r\n\r\n                //console.log(response.data)\r\n                if (response.data.status === \"success\") {\r\n                    getAllNotes()\r\n\r\n                    toast.error(\"Note Deleted!\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT,\r\n                        autoClose: 3000\r\n                    })\r\n\r\n                }\r\n            } catch (err) {\r\n                console.log(err.response)\r\n            }\r\n        }\r\n\r\n        deleteNote()\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {\r\n                errorMessage\r\n                ? <Redirect to=\"/error\" message={errorMessage} />\r\n                : null\r\n            }\r\n\r\n            {\r\n                !loggedIn\r\n                    ? <Redirect to=\"/login\" />\r\n                    : null\r\n            }\r\n            <Container>\r\n\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    component=\"h2\"\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                >\r\n                    Create A New Note\r\n                </Typography>\r\n\r\n                <form noValidate autoComplete=\"off\" onSubmit={\r\n                    (e) => {\r\n                        e.preventDefault()\r\n                        handleSubmit()\r\n                    }\r\n                } >\r\n\r\n                    <TextField\r\n                        onChange={(e) => { setTitle(e.target.value) }}\r\n                        className={classes.field}\r\n                        label=\"Note Title\"\r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n\r\n                </form>\r\n\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    component=\"h2\"\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    style={{ marginTop: \"20px\" }}\r\n                >\r\n                    Saved Notes\r\n                </Typography>\r\n\r\n                <div>\r\n                    {\r\n                        notes\r\n                            ? notes.map(\r\n                                (note, index) => {\r\n                                    return (\r\n                                        <div\r\n                                            style={{\r\n                                                padding: \"20px\",\r\n                                                borderBottom: \"1px solid #333\",\r\n                                                display: \"flex\",\r\n                                                justifyContent: \"space-between\"\r\n                                            }}\r\n                                            key={index}\r\n                                        >\r\n                                            <Typography\r\n                                                variant=\"h6\"\r\n                                                gutterBottom\r\n                                                style={{ cursor: \"pointer\", display: \"inline-block\" }}\r\n                                                onClick={\r\n                                                    () => {\r\n                                                        const noteId = note._id[\"$oid\"]\r\n                                                        const noteIdString = `id=${noteId}`\r\n\r\n                                                        history.push({\r\n                                                            pathname: \"/note\",\r\n                                                            search: noteIdString\r\n                                                        })\r\n                                                    }\r\n                                                }\r\n                                            >\r\n                                                {note.title}\r\n                                            </Typography>\r\n\r\n                                            <DeleteIcon\r\n                                                style={{ fontSize: 30, cursor: \"pointer\" }}\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                onClick={\r\n                                                    (noteId) => {\r\n                                                        deleteHandler(note._id[\"$oid\"])\r\n                                                    }\r\n                                                }\r\n                                            />\r\n\r\n\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            )\r\n                            : null\r\n                    }\r\n                </div>\r\n\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport AuthContext from '../contexts/AuthContext'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Navbar = () => {\r\n\r\n    const { loggedIn } = useContext(AuthContext)\r\n\r\n    return (\r\n        <Container >\r\n            <AppBar>\r\n                <Toolbar>\r\n\r\n                    <Typography variant=\"h5\" style={{ flexGrow: 1 }} >\r\n                        <Button\r\n                            color=\"inherit\"\r\n                            component={Link}\r\n                            to=\"/dashboard\"\r\n                            style={{ transform: \"scale(1.5)\" }}\r\n                        >\r\n                            Note IT\r\n                        </Button>\r\n                    </Typography>\r\n\r\n                    {\r\n                        !loggedIn\r\n                            ? <Button\r\n                                color=\"inherit\"\r\n                                component={Link}\r\n                                to=\"/signup\"\r\n                            >\r\n                                Sign Up\r\n                            </Button>\r\n                            : null\r\n                    }\r\n\r\n\r\n                    {\r\n                        !loggedIn\r\n                            ? <Button\r\n                                color=\"inherit\"\r\n                                component={Link}\r\n                                to=\"/login\"\r\n                            >\r\n                                Log In\r\n                            </Button>\r\n                            : null\r\n                    }\r\n\r\n\r\n                    {\r\n                        loggedIn\r\n                            ? <Button\r\n                                color=\"inherit\"\r\n                                component={Link}\r\n                                to=\"/dashboard\"\r\n                            >\r\n                                Dashboard\r\n                            </Button>\r\n                            : null\r\n                    }\r\n\r\n\r\n                    {\r\n                        loggedIn\r\n                            ? <Button\r\n                                color=\"inherit\"\r\n                                component={Link}\r\n                                to=\"/logout\"\r\n                            >\r\n                                Log Out\r\n                            </Button>\r\n                            : null\r\n                    }\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Container>\r\n        // <div>\r\n\r\n        //     {\r\n        //         !loggedIn\r\n        //             ? <Link to=\"/signup\"> Signup </Link>\r\n        //             : null\r\n        //     }\r\n\r\n\r\n        //     {\r\n        //         !loggedIn\r\n        //             ? <Link to=\"/login\"> Login </Link>\r\n        //             : null\r\n        //     }\r\n\r\n        //     {\r\n        //         loggedIn\r\n        //             ? <Link to=\"/logout\"> Logout </Link>\r\n        //             : null\r\n        //     }\r\n\r\n        //     {\r\n        //         loggedIn\r\n        //             ? <Link to=\"/dashboard\">Dashboard</Link>\r\n        //             : null\r\n        //     }\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport AuthContext from '../contexts/AuthContext';\r\n\r\nconst useStyles = makeStyles({\r\n    field: {\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n        display: \"block\"\r\n    }\r\n})\r\n\r\ntoast.configure()\r\n\r\nexport default function Note(props) {\r\n    const queryParams = new URLSearchParams(props.location.search)\r\n    let idCopy;\r\n    for (let param of queryParams.entries()) {\r\n        if (param[0] === 'id') {\r\n            idCopy = param[1]\r\n        }\r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    const [noteId] = useState(idCopy)\r\n    const [title, setTitle] = useState(\"\")\r\n    const [content, setContent] = useState(\"\")\r\n\r\n    const history = useHistory()\r\n\r\n    const { loggedIn } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        async function getNote() {\r\n            const response = await axios.get(\r\n                `/api/notes/${noteId}`\r\n            )\r\n\r\n            //console.log(response.data)\r\n            setTitle(response.data.note.title)\r\n            setContent(response.data.note.content)\r\n        }\r\n\r\n        getNote()\r\n    }, [])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        async function updateNote() {\r\n\r\n            const tokenResponse = await axios.get('/api/getcsrf', { withCredentials: true })\r\n            //console.log(tokenResponse.headers[\"x-csrftoken\"])\r\n            const token = tokenResponse.headers[\"x-csrftoken\"]\r\n\r\n            const response = await axios.patch(\r\n                `/api/notes/${noteId}`,\r\n                {\r\n                    title,\r\n                    content\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"X-CSRFToken\": token\r\n                    }\r\n                }\r\n            )\r\n\r\n            if (response.data.status === \"success\") {\r\n                history.push({\r\n                    pathname: \"/dashboard\"\r\n                })\r\n                toast.info(\"saved\", {\r\n                    position: toast.POSITION.BOTTOM_RIGHT,\r\n                    autoClose: 3000\r\n                })\r\n            }\r\n\r\n        }\r\n        updateNote()\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n\r\n            {\r\n                !loggedIn\r\n                    ? <Redirect to=\"/login\" />\r\n                    : null\r\n            }\r\n\r\n            <Typography\r\n                variant=\"h6\"\r\n                component=\"h2\"\r\n                color=\"textSecondary\"\r\n                gutterBottom\r\n            >\r\n                Create A New Note\r\n            </Typography>\r\n\r\n            <form noValidate autoComplete=\"off\" onSubmit={(e) => handleSubmit(e)} >\r\n\r\n                <label>Note Title</label>\r\n                <TextField\r\n                    onChange={(e) => { setTitle(e.target.value) }}\r\n                    className={classes.field}\r\n                    value={title}\r\n                    color=\"secondary\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <label>Content</label>\r\n                <TextField\r\n                    onChange={(e) => { setContent(e.target.value) }}\r\n                    className={classes.field}\r\n                    value={content}\r\n                    color=\"secondary\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    multiline\r\n                    rows={4}\r\n                />\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    className={classes.btn}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                >\r\n                    Submit\r\n                </Button>\r\n\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Error = (props) => {\r\n\r\n    const state = props.message ? props.message : {message: \"\"}\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if(state.message) {\r\n            setErrorMessage(state.message)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n\r\n            {\r\n                !state.message\r\n                ? <Redirect to=\"/dashboard\" />\r\n                : null\r\n            }\r\n\r\n            {\r\n                errorMessage\r\n                ? <Typography variant=\"h1\" >{ errorMessage }</Typography>\r\n                : null\r\n            }\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import { Route } from 'react-router-dom'\nimport Signup from './components/Signup'\nimport Login from './components/Login'\nimport Logout from './components/Logout'\nimport AuthContext, { AuthContextProvider } from './contexts/AuthContext'\nimport Home from './components/Home'\nimport Dashboard from './components/Dashboard'\nimport Navbar from './components/Navbar'\nimport { useContext, useEffect } from 'react'\nimport Note from './components/Note'\nimport axios from 'axios'\nimport Error from './components/Error'\n\nfunction App() {\n  const { loggedIn, token } = useContext(AuthContext)\n\n  axios.defaults.headers.post['X-CSRFToken'] = token\n\n  return (\n    <>\n\n      <Navbar />\n\n      <Route path=\"/\" component={Home}/>\n      {\n        loggedIn === true && \n        <Route path=\"/dashboard\" component={Dashboard} />\n      }\n      <Route path=\"/signup\" component={Signup} />\n\n      {\n        (loggedIn === true || loggedIn === false) &&\n        <Route path=\"/login\" component={Login} />\n      }\n\n      {\n        (loggedIn === true || loggedIn === false) &&\n        <Route path=\"/note\" component={Note} />\n      }\n\n      <Route path=\"/error\" render={\n        (props) => <Error {...props} />\n      } />\n\n      <Route path=\"/logout\" component={Logout} />\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport { AuthContextProvider } from './contexts/AuthContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthContextProvider>\n        <App />\n      </AuthContextProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}